{"version":3,"file":"player.js","sourceRoot":"","sources":["../../../../../../../packages/core/src/render3/interfaces/player.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4B6B,UAAW,EAAE,UAAW,EAAE,SAAU,EAAE,aAAc,EAAE,cAAe","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A shared interface which contains an animation player\n */\nexport interface Player {\n  parent?: Player|null;\n  state: PlayState;\n  play(): void;\n  pause(): void;\n  finish(): void;\n  destroy(): void;\n  addEventListener(state: PlayState|string, cb: (data?: any) => any): void;\n}\n\n/**\n * The state of a given player\n *\n * Do not change the increasing nature of the numbers since the player\n * code may compare state by checking if a number is higher or lower than\n * a certain numeric value.\n */\nexport const enum PlayState {Pending = 0, Running = 1, Paused = 2, Finished = 100, Destroyed = 200}\n\n/**\n * The context that stores all active animation players present on an element.\n */\nexport declare type PlayerContext = Player[];\nexport declare type ComponentInstance = {};\nexport declare type DirectiveInstance = {};\n\n/**\n * Designed to be used as an injection service to capture all animation players.\n *\n * When present all animation players will be passed into the flush method below.\n * This feature is designed to service application-wide animation testing, live\n * debugging as well as custom animation choreographing tools.\n */\nexport interface PlayerHandler {\n  /**\n   * Designed to kick off the player at the end of change detection\n   */\n  flushPlayers(): void;\n\n  /**\n   * @param player The player that has been scheduled to run within the application.\n   * @param context The context as to where the player was bound to\n   */\n  queuePlayer(player: Player, context: ComponentInstance|DirectiveInstance|HTMLElement): void;\n}\n"]}