{"version":3,"file":"directive.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/jit/directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ConstantPool, R3DirectiveMetadata, WrappedNodeExpr, compileComponentFromMetadata as compileR3Component, compileDirectiveFromMetadata as compileR3Directive, jitExpression, makeBindingParser, parseHostBindings, parseTemplate} from '@angular/compiler';\n\nimport {Component, Directive, HostBinding, HostListener, Input, Output} from '../../metadata/directives';\nimport {componentNeedsResolution, maybeQueueResolutionOfComponentResources} from '../../metadata/resource_loading';\nimport {ViewEncapsulation} from '../../metadata/view';\nimport {Type} from '../../type';\nimport {stringify} from '../../util';\n\nimport {angularCoreEnv} from './environment';\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF} from './fields';\nimport {patchComponentDefWithScope, transitiveScopesFor} from './module';\nimport {getReflect, reflectDependencies} from './util';\n\ntype StringMap = {\n  [key: string]: string\n};\n\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nexport function compileComponent(type: Type<any>, metadata: Component): void {\n  let ngComponentDef: any = null;\n  // Metadata may have resources which need to be resolved.\n  maybeQueueResolutionOfComponentResources(metadata);\n  Object.defineProperty(type, NG_COMPONENT_DEF, {\n    get: () => {\n      if (ngComponentDef === null) {\n        if (componentNeedsResolution(metadata)) {\n          const error = [`Component '${stringify(type)}' is not resolved:`];\n          if (metadata.templateUrl) {\n            error.push(` - templateUrl: ${stringify(metadata.templateUrl)}`);\n          }\n          if (metadata.styleUrls && metadata.styleUrls.length) {\n            error.push(` - styleUrls: ${JSON.stringify(metadata.styleUrls)}`);\n          }\n          error.push(`Did you run and wait for 'resolveComponentResources()'?`);\n          throw new Error(error.join('\\n'));\n        }\n        // The ConstantPool is a requirement of the JIT'er.\n        const constantPool = new ConstantPool();\n\n        // Parse the template and check for errors.\n        const template = parseTemplate(\n            metadata.template !, `ng://${stringify(type)}/template.html`, {\n              preserveWhitespaces: metadata.preserveWhitespaces || false,\n            },\n            '');\n        if (template.errors !== undefined) {\n          const errors = template.errors.map(err => err.toString()).join(', ');\n          throw new Error(\n              `Errors during JIT compilation of template for ${stringify(type)}: ${errors}`);\n        }\n\n        // Compile the component metadata, including template, into an expression.\n        // TODO(alxhub): implement inputs, outputs, queries, etc.\n        const res = compileR3Component(\n            {\n              ...directiveMetadata(type, metadata),\n              template,\n              directives: new Map(),\n              pipes: new Map(),\n              viewQueries: [],\n              wrapDirectivesInClosure: false,\n              styles: metadata.styles || [],\n              encapsulation: metadata.encapsulation || ViewEncapsulation.Emulated\n            },\n            constantPool, makeBindingParser());\n        const preStatements = [...constantPool.statements, ...res.statements];\n\n        ngComponentDef = jitExpression(\n            res.expression, angularCoreEnv, `ng://${type.name}/ngComponentDef.js`, preStatements);\n\n        // If component compilation is async, then the @NgModule annotation which declares the\n        // component may execute and set an ngSelectorScope property on the component type. This\n        // allows the component to patch itself with directiveDefs from the module after it\n        // finishes compiling.\n        if (hasSelectorScope(type)) {\n          const scopes = transitiveScopesFor(type.ngSelectorScope);\n          patchComponentDefWithScope(ngComponentDef, scopes);\n        }\n      }\n      return ngComponentDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction hasSelectorScope<T>(component: Type<T>): component is Type<T>&\n    {ngSelectorScope: Type<any>} {\n  return (component as{ngSelectorScope?: any}).ngSelectorScope !== undefined;\n}\n\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nexport function compileDirective(type: Type<any>, directive: Directive): void {\n  let ngDirectiveDef: any = null;\n  Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n    get: () => {\n      if (ngDirectiveDef === null) {\n        const constantPool = new ConstantPool();\n        const sourceMapUrl = `ng://${type && type.name}/ngDirectiveDef.js`;\n        const res = compileR3Directive(\n            directiveMetadata(type, directive), constantPool, makeBindingParser());\n        const preStatements = [...constantPool.statements, ...res.statements];\n        ngDirectiveDef = jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n      }\n      return ngDirectiveDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nexport function extendsDirectlyFromObject(type: Type<any>): boolean {\n  return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type: Type<any>, metadata: Directive): R3DirectiveMetadata {\n  // Reflect inputs and outputs.\n  const propMetadata = getReflect().propMetadata(type);\n\n  const host = extractHostBindings(metadata, propMetadata);\n\n  const inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n  const outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n\n  const inputsFromType: StringMap = {};\n  const outputsFromType: StringMap = {};\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      propMetadata[field].forEach(ann => {\n        if (isInput(ann)) {\n          inputsFromType[field] = ann.bindingPropertyName || field;\n        } else if (isOutput(ann)) {\n          outputsFromType[field] = ann.bindingPropertyName || field;\n        }\n      });\n    }\n  }\n\n  return {\n    name: type.name,\n    type: new WrappedNodeExpr(type),\n    typeArgumentCount: 0,\n    selector: metadata.selector !,\n    deps: reflectDependencies(type), host,\n    inputs: {...inputsFromMetadata, ...inputsFromType},\n    outputs: {...outputsFromMetadata, ...outputsFromType},\n    queries: [],\n    lifecycle: {\n      usesOnChanges: type.prototype.ngOnChanges !== undefined,\n    },\n    typeSourceSpan: null !,\n    usesInheritance: !extendsDirectlyFromObject(type),\n    exportAs: metadata.exportAs || null,\n  };\n}\n\nfunction extractHostBindings(metadata: Directive, propMetadata: {[key: string]: any[]}): {\n  attributes: StringMap,\n  listeners: StringMap,\n  properties: StringMap,\n} {\n  // First parse the declarations from the metadata.\n  const {attributes, listeners, properties, animations} = parseHostBindings(metadata.host || {});\n\n  if (Object.keys(animations).length > 0) {\n    throw new Error(`Animation bindings are as-of-yet unsupported in Ivy`);\n  }\n\n  // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      propMetadata[field].forEach(ann => {\n        if (isHostBinding(ann)) {\n          properties[ann.hostPropertyName || field] = field;\n        } else if (isHostListener(ann)) {\n          listeners[ann.eventName || field] = `${field}(${(ann.args || []).join(',')})`;\n        }\n      });\n    }\n  }\n\n  return {attributes, listeners, properties};\n}\n\nfunction isInput(value: any): value is Input {\n  return value.ngMetadataName === 'Input';\n}\n\nfunction isOutput(value: any): value is Output {\n  return value.ngMetadataName === 'Output';\n}\n\nfunction isHostBinding(value: any): value is HostBinding {\n  return value.ngMetadataName === 'HostBinding';\n}\n\nfunction isHostListener(value: any): value is HostListener {\n  return value.ngMetadataName === 'HostListener';\n}\n\nfunction parseInputOutputs(values: string[]): StringMap {\n  return values.reduce(\n      (map, value) => {\n        const [field, property] = value.split(',').map(piece => piece.trim());\n        map[field] = property || field;\n        return map;\n      },\n      {} as StringMap);\n}\n"]}