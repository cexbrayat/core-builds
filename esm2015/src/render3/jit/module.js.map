{"version":3,"file":"module.js","sourceRoot":"","sources":["../../../../../../packages/core/src/render3/jit/module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Expression, R3InjectorMetadata, R3NgModuleMetadata, R3Reference, WrappedNodeExpr, compileInjector, compileNgModule as compileR3NgModule, jitExpression} from '@angular/compiler';\n\nimport {ModuleWithProviders, NgModule, NgModuleDefInternal, NgModuleTransitiveScopes} from '../../metadata/ng_module';\nimport {Type} from '../../type';\nimport {ComponentDefInternal} from '../interfaces/definition';\n\nimport {angularCoreEnv} from './environment';\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF, NG_INJECTOR_DEF, NG_MODULE_DEF, NG_PIPE_DEF} from './fields';\nimport {reflectDependencies} from './util';\n\nconst EMPTY_ARRAY: Type<any>[] = [];\n\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nexport function compileNgModule(moduleType: Type<any>, ngModule: NgModule): void {\n  compileNgModuleDefs(moduleType, ngModule);\n  setScopeOnDeclaredComponents(moduleType, ngModule);\n}\n\n/**\n * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n */\nexport function compileNgModuleDefs(moduleType: Type<any>, ngModule: NgModule): void {\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n\n  let ngModuleDef: any = null;\n  Object.defineProperty(moduleType, NG_MODULE_DEF, {\n    get: () => {\n      if (ngModuleDef === null) {\n        const meta: R3NgModuleMetadata = {\n          type: wrap(moduleType),\n          bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY).map(wrap),\n          declarations: declarations.map(wrapReference),\n          imports: flatten(ngModule.imports || EMPTY_ARRAY)\n                       .map(expandModuleWithProviders)\n                       .map(wrapReference),\n          exports: flatten(ngModule.exports || EMPTY_ARRAY)\n                       .map(expandModuleWithProviders)\n                       .map(wrapReference),\n          emitInline: true,\n        };\n        const res = compileR3NgModule(meta);\n        ngModuleDef = jitExpression(\n            res.expression, angularCoreEnv, `ng://${moduleType.name}/ngModuleDef.js`, []);\n      }\n      return ngModuleDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n\n  let ngInjectorDef: any = null;\n  Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n    get: () => {\n      if (ngInjectorDef === null) {\n        const meta: R3InjectorMetadata = {\n          name: moduleType.name,\n          type: wrap(moduleType),\n          deps: reflectDependencies(moduleType),\n          providers: new WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY),\n          imports: new WrappedNodeExpr([\n            ngModule.imports || EMPTY_ARRAY,\n            ngModule.exports || EMPTY_ARRAY,\n          ]),\n        };\n        const res = compileInjector(meta);\n        ngInjectorDef = jitExpression(\n            res.expression, angularCoreEnv, `ng://${moduleType.name}/ngInjectorDef.js`,\n            res.statements);\n      }\n      return ngInjectorDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType: Type<any>, ngModule: NgModule) {\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n\n  const transitiveScopes = transitiveScopesFor(moduleType);\n\n  declarations.forEach(declaration => {\n    if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n      // An `ngComponentDef` field exists - go ahead and patch the component directly.\n      const component = declaration as Type<any>& {ngComponentDef: ComponentDefInternal<any>};\n      const componentDef = component.ngComponentDef;\n      patchComponentDefWithScope(componentDef, transitiveScopes);\n    } else if (\n        !declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n      // Set `ngSelectorScope` for future reference when the component compilation finishes.\n      (declaration as Type<any>& {ngSelectorScope?: any}).ngSelectorScope = moduleType;\n    }\n  });\n}\n\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nexport function patchComponentDefWithScope<C>(\n    componentDef: ComponentDefInternal<C>, transitiveScopes: NgModuleTransitiveScopes) {\n  componentDef.directiveDefs = () => Array.from(transitiveScopes.compilation.directives)\n                                         .map(dir => dir.ngDirectiveDef || dir.ngComponentDef)\n                                         .filter(def => !!def);\n  componentDef.pipeDefs = () =>\n      Array.from(transitiveScopes.compilation.pipes).map(pipe => pipe.ngPipeDef);\n}\n\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nexport function transitiveScopesFor<T>(moduleType: Type<T>): NgModuleTransitiveScopes {\n  if (!isNgModule(moduleType)) {\n    throw new Error(`${moduleType.name} does not have an ngModuleDef`);\n  }\n  const def = moduleType.ngModuleDef;\n\n  if (def.transitiveCompileScopes !== null) {\n    return def.transitiveCompileScopes;\n  }\n\n  const scopes: NgModuleTransitiveScopes = {\n    compilation: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n    exported: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n  };\n\n  def.declarations.forEach(declared => {\n    const declaredWithDefs = declared as Type<any>& { ngPipeDef?: any; };\n\n    if (declaredWithDefs.ngPipeDef !== undefined) {\n      scopes.compilation.pipes.add(declared);\n    } else {\n      // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n      // had its template compiled yet. In either case, it gets added to the compilation's\n      // directives.\n      scopes.compilation.directives.add(declared);\n    }\n  });\n\n  def.imports.forEach(<I>(imported: Type<I>) => {\n    const importedTyped = imported as Type<I>& {\n      // If imported is an @NgModule:\n      ngModuleDef?: NgModuleDefInternal<I>;\n    };\n\n    if (!isNgModule<I>(importedTyped)) {\n      throw new Error(`Importing ${importedTyped.name} which does not have an ngModuleDef`);\n    }\n\n    // When this module imports another, the imported module's exported directives and pipes are\n    // added to the compilation scope of this module.\n    const importedScope = transitiveScopesFor(importedTyped);\n    importedScope.exported.directives.forEach(entry => scopes.compilation.directives.add(entry));\n    importedScope.exported.pipes.forEach(entry => scopes.compilation.pipes.add(entry));\n  });\n\n  def.exports.forEach(<E>(exported: Type<E>) => {\n    const exportedTyped = exported as Type<E>& {\n      // Components, Directives, NgModules, and Pipes can all be exported.\n      ngComponentDef?: any;\n      ngDirectiveDef?: any;\n      ngModuleDef?: NgModuleDefInternal<E>;\n      ngPipeDef?: any;\n    };\n\n    // Either the type is a module, a pipe, or a component/directive (which may not have an\n    // ngComponentDef as it might be compiled asynchronously).\n    if (isNgModule(exportedTyped)) {\n      // When this module exports another, the exported module's exported directives and pipes are\n      // added to both the compilation and exported scopes of this module.\n      const exportedScope = transitiveScopesFor(exportedTyped);\n      exportedScope.exported.directives.forEach(entry => {\n        scopes.compilation.directives.add(entry);\n        scopes.exported.directives.add(entry);\n      });\n      exportedScope.exported.pipes.forEach(entry => {\n        scopes.compilation.pipes.add(entry);\n        scopes.exported.pipes.add(entry);\n      });\n    } else if (exportedTyped.ngPipeDef !== undefined) {\n      scopes.exported.pipes.add(exportedTyped);\n    } else {\n      scopes.exported.directives.add(exportedTyped);\n    }\n  });\n\n  def.transitiveCompileScopes = scopes;\n  return scopes;\n}\n\nfunction flatten<T>(values: any[]): T[] {\n  const out: T[] = [];\n  values.forEach(value => {\n    if (Array.isArray(value)) {\n      out.push(...flatten<T>(value));\n    } else {\n      out.push(value);\n    }\n  });\n  return out;\n}\n\nfunction expandModuleWithProviders(value: Type<any>| ModuleWithProviders): Type<any> {\n  if (isModuleWithProviders(value)) {\n    return value.ngModule;\n  }\n  return value;\n}\n\nfunction wrap(value: Type<any>): Expression {\n  return new WrappedNodeExpr(value);\n}\n\nfunction wrapReference(value: Type<any>): R3Reference {\n  const wrapped = wrap(value);\n  return {value: wrapped, type: wrapped};\n}\n\nfunction isModuleWithProviders(value: any): value is ModuleWithProviders {\n  return (value as{ngModule?: any}).ngModule !== undefined;\n}\n\nfunction isNgModule<T>(value: Type<T>): value is Type<T>&{ngModuleDef: NgModuleDefInternal<T>} {\n  return (value as{ngModuleDef?: NgModuleDefInternal<T>}).ngModuleDef !== undefined;\n}\n"]}