{"version":3,"file":"debug.js","sourceRoot":"","sources":["../../../../../packages/core/src/render3/debug.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Renderer2, RendererType2} from '../render/api';\nimport {DebugContext} from '../view';\nimport {DebugRenderer2, DebugRendererFactory2} from '../view/services';\n\nimport * as di from './di';\nimport {NG_HOST_SYMBOL, _getViewData} from './instructions';\nimport {LElementNode} from './interfaces/node';\nimport {CONTEXT, DIRECTIVES, LViewData, TVIEW} from './interfaces/view';\n\n/**\n * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n *\n * The created DebugRenderer know how to create a Debug Context specific to IVY.\n */\nexport class Render3DebugRendererFactory2 extends DebugRendererFactory2 {\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    const renderer = super.createRenderer(element, renderData) as DebugRenderer2;\n    renderer.debugContextFactory = () => new Render3DebugContext(_getViewData());\n    return renderer;\n  }\n}\n\n/**\n * Stores context information about view nodes.\n *\n * Used in tests to retrieve information those nodes.\n */\nclass Render3DebugContext implements DebugContext {\n  readonly nodeIndex: number|null;\n\n  constructor(private viewData: LViewData) {\n    // The LNode will be created next and appended to viewData\n    this.nodeIndex = viewData ? viewData.length : null;\n  }\n\n  get view(): any { return this.viewData; }\n\n  get injector(): Injector {\n    if (this.nodeIndex !== null) {\n      const lElementNode: LElementNode = this.view[this.nodeIndex];\n      const nodeInjector = lElementNode.nodeInjector;\n\n      if (nodeInjector) {\n        return new di.NodeInjector(nodeInjector);\n      }\n    }\n    return Injector.NULL;\n  }\n\n  get component(): any {\n    // TODO(vicb): why/when\n    if (this.nodeIndex === null) {\n      return null;\n    }\n\n    const tView = this.view[TVIEW];\n    const components: number[]|null = tView.components;\n\n    return (components && components.indexOf(this.nodeIndex) == -1) ?\n        null :\n        this.view[this.nodeIndex].data[CONTEXT];\n  }\n\n  // TODO(vicb): add view providers when supported\n  get providerTokens(): any[] {\n    const matchedDirectives: any[] = [];\n\n    // TODO(vicb): why/when\n    if (this.nodeIndex === null) {\n      return matchedDirectives;\n    }\n\n    const directives = this.view[DIRECTIVES];\n\n    if (directives) {\n      const currentNode = this.view[this.nodeIndex];\n      for (let dirIndex = 0; dirIndex < directives.length; dirIndex++) {\n        const directive = directives[dirIndex];\n        if (directive[NG_HOST_SYMBOL] === currentNode) {\n          matchedDirectives.push(directive.constructor);\n        }\n      }\n    }\n    return matchedDirectives;\n  }\n\n  get references(): {[key: string]: any} {\n    // TODO(vicb): implement retrieving references\n    throw new Error('Not implemented yet in ivy');\n  }\n\n  get context(): any {\n    if (this.nodeIndex === null) {\n      return null;\n    }\n    const lNode = this.view[this.nodeIndex];\n    return lNode.view[CONTEXT];\n  }\n\n  get componentRenderElement(): any { throw new Error('Not implemented in ivy'); }\n\n  get renderNode(): any { throw new Error('Not implemented in ivy'); }\n\n  // TODO(vicb): check previous implementation\n  logError(console: Console, ...values: any[]): void { console.error(...values); }\n}"]}