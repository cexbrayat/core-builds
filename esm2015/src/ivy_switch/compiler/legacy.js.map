{"version":3,"file":"legacy.js","sourceRoot":"","sources":["../../../../../../packages/core/src/ivy_switch/compiler/legacy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableType, InjectorType, defineInjectable, defineInjector, getInjectableDef} from '../../di/defs';\nimport {InjectableProvider} from '../../di/injectable';\nimport {inject, injectArgs} from '../../di/injector';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from '../../di/provider';\nimport {NgModule} from '../../metadata';\nimport {ReflectionCapabilities} from '../../reflection/reflection_capabilities';\nimport {Type} from '../../type';\nimport {getClosureSafeProperty} from '../../util/property';\n\nimport * as ivyOn from './ivy_switch_on';\n\nfunction noop() {}\n\nexport interface DirectiveCompiler { (type: any, meta: any): void; }\n\nexport const R3_COMPILE_COMPONENT__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_COMPONENT;\nexport const R3_COMPILE_DIRECTIVE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_DIRECTIVE;\nexport const R3_COMPILE_INJECTABLE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_INJECTABLE;\nexport const R3_COMPILE_NGMODULE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_NGMODULE;\nexport const R3_COMPILE_PIPE__POST_NGCC__: DirectiveCompiler = ivyOn.R3_COMPILE_PIPE;\nexport const R3_COMPILE_NGMODULE_DEFS__POST_NGCC__: DirectiveCompiler =\n    ivyOn.R3_COMPILE_NGMODULE_DEFS;\nexport const R3_PATCH_COMPONENT_DEF_WTIH_SCOPE__POST_NGCC__: DirectiveCompiler =\n    ivyOn.R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n\nexport const ivyEnable__POST_NGCC__: boolean = ivyOn.ivyEnabled;\n\nconst R3_COMPILE_COMPONENT__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_COMPILE_DIRECTIVE__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_COMPILE_INJECTABLE__PRE_NGCC__: DirectiveCompiler = preR3InjectableCompile;\nconst R3_COMPILE_NGMODULE__PRE_NGCC__: DirectiveCompiler = preR3NgModuleCompile;\nconst R3_COMPILE_PIPE__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_COMPILE_NGMODULE_DEFS__PRE_NGCC__: DirectiveCompiler = noop;\nconst R3_PATCH_COMPONENT_DEF_WTIH_SCOPE__PRE_NGCC__: DirectiveCompiler = noop;\n\nconst ivyEnable__PRE_NGCC__ = false;\n\nexport const ivyEnabled = ivyEnable__PRE_NGCC__;\nexport let R3_COMPILE_COMPONENT: DirectiveCompiler = R3_COMPILE_COMPONENT__PRE_NGCC__;\nexport let R3_COMPILE_DIRECTIVE: DirectiveCompiler = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\nexport let R3_COMPILE_INJECTABLE: DirectiveCompiler = R3_COMPILE_INJECTABLE__PRE_NGCC__;\nexport let R3_COMPILE_NGMODULE: DirectiveCompiler = R3_COMPILE_NGMODULE__PRE_NGCC__;\nexport let R3_COMPILE_PIPE: DirectiveCompiler = R3_COMPILE_PIPE__PRE_NGCC__;\nexport let R3_COMPILE_NGMODULE_DEFS: DirectiveCompiler = R3_COMPILE_NGMODULE_DEFS__PRE_NGCC__;\nexport let R3_PATCH_COMPONENT_DEF_WTIH_SCOPE: DirectiveCompiler =\n    R3_PATCH_COMPONENT_DEF_WTIH_SCOPE__PRE_NGCC__;\n\n\n////////////////////////////////////////////////////////////\n// Glue code which should be removed after Ivy is default //\n////////////////////////////////////////////////////////////\n\nfunction preR3NgModuleCompile(moduleType: InjectorType<any>, metadata: NgModule): void {\n  let imports = (metadata && metadata.imports) || [];\n  if (metadata && metadata.exports) {\n    imports = [...imports, metadata.exports];\n  }\n\n  moduleType.ngInjectorDef = defineInjector({\n    factory: convertInjectableProviderToFactory(moduleType, {useClass: moduleType}),\n    providers: metadata && metadata.providers,\n    imports: imports,\n  });\n}\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst EMPTY_ARRAY: any[] = [];\n\nfunction convertInjectableProviderToFactory(type: Type<any>, provider?: InjectableProvider): () =>\n    any {\n  if (!provider) {\n    const reflectionCapabilities = new ReflectionCapabilities();\n    const deps = reflectionCapabilities.parameters(type);\n    // TODO - convert to flags.\n    return () => new type(...injectArgs(deps as any[]));\n  }\n\n  if (USE_VALUE in provider) {\n    const valueProvider = (provider as ValueSansProvider);\n    return () => valueProvider.useValue;\n  } else if ((provider as ExistingSansProvider).useExisting) {\n    const existingProvider = (provider as ExistingSansProvider);\n    return () => inject(existingProvider.useExisting);\n  } else if ((provider as FactorySansProvider).useFactory) {\n    const factoryProvider = (provider as FactorySansProvider);\n    return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n  } else if ((provider as StaticClassSansProvider | ClassSansProvider).useClass) {\n    const classProvider = (provider as StaticClassSansProvider | ClassSansProvider);\n    let deps = (provider as StaticClassSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new classProvider.useClass(...injectArgs(deps));\n  } else {\n    let deps = (provider as ConstructorSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new type(...injectArgs(deps !));\n  }\n}\n\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction preR3InjectableCompile(\n    injectableType: InjectableType<any>,\n    options: {providedIn?: Type<any>| 'root' | null} & InjectableProvider): void {\n  if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n    injectableType.ngInjectableDef = defineInjectable({\n      providedIn: options.providedIn,\n      factory: convertInjectableProviderToFactory(injectableType, options),\n    });\n  }\n}\n"]}