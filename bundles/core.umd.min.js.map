{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","ChangeDetectionStrategy","ChangeDetectorStatus","ViewEncapsulation","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","hasOwnProperty","ÉµChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","type","pipeTypes","pipes","directiveTypes","directives","declaredInputs","encapsulation","Emulated","styles","animations","data","def","diPublic","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","invertObject","outputs","exportAs","onInit","prototype","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","map","extractDirectiveDef","pipeDefs","extractPipeDef","selectors","viewQuery","features","providers","viewProviders","id","feature","forEach","fn","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","imports","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","Array","isArray","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","name","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","iterator","keys","Object","getOwnPropertyNames","Map","i","length","scheduleMicroTask","Zone","then","apply","current","looseIdentical","a","b","isNaN","stringify","token","join","overriddenName","res","toString","newLineIndex","indexOf","substring","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","next","item2","done","value","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","o","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","stringify$1","loadInternal","index","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isLContainer","getRootView","lViewData","readPatchedLViewData","readPatchedData","getContext","mpValue","component","undefined","isComponentInstance","instance","constructor","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","slice","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","tView","initHooks","push","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","call","throwMultipleComponentError","tagName","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","hostTNode","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","node","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","parentView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","viewData","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","currentNode","getHighestElementContainer","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","selector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","EMPTY_OBJ","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","getOrCreatePlayerContext","stylingContext","allocPlayerContext","updateStyleProp","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased_5","valueExists","setDirty","setContextDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","currentQueries","_CLEAN_PROMISE","CIRCULAR","getRenderer","getRendererFactory","getCurrentSanitizer","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","_getViewData","getCleanup","getTViewCleanup","checkNoChangesMode","bindingRootIndex","getBindingRoot","enterView","newView","oldView","bindingStartIndex","leaveView","creationOnly","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","executeInitAndContentHooks","createLViewData","blueprint","createNodeAtIndex","createTNode","createViewNode","adjustBlueprintForNewNode","resetComponentState","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","generateExpandoBlock","totalHostVars","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","instantiateDirectivesDirectly","clone","addComponentLogic","directiveCreate","saveResolvedLocalsInData","localIndex","directiveCount","elementIndex","NO_CHANGE","registry","directiveRegistry","unshift","throwCyclicDependencyError","queueComponentIndexForCheck","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","listen","storeCleanupFn","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","e","preventDefault","returnValue","addEventListener","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","elementAttribute","element_1","removeAttribute","strValue","elementProperty","propName","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","enableBindings","disableBindings","tViews","tParent","injectorIndex","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","v","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","elementStylingApply","renderStyling","styleStore","classStore","isContextDirty","multiStartIndex","isClassBased_6","valueToApply","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","updateStylingMap","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","isClassBased_3","isClassBased_4","text","textNative","textBinding","element_2","textContent","directive","baseDirectiveCreate","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","addToViewTree","queueHostBindingForCheck","dirIndex","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","rootContext","nothingScheduled","scheduleTick","res_1","clean","r","scheduler","playerHandler","flushPlayers","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bind","bindingUpdated","interpolationV","values","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","updateBinding","exp1","exp2","exp3","exp4","getTView","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","ROOT_EXPANDO_INSTRUCTIONS","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","createRootContext","LifecycleHooksFeature","rootTView","extendStatics","d","setPrototypeOf","__proto__","p","__extends","__","create","__assign","assign","t","s","n","arguments","__decorate","decorators","desc","c","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","m","Symbol","__read","ar","error","__spread","concat","isComponentDef","definition","InheritDefinitionFeature","superType","getSuperType","getPrototypeOf","_loop_1","e_1","_a","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","set","get","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","defineInjectable","opts","providedIn","defineInjector","options","getInjectableDef","getInjectorDef","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","InjectionToken","_desc","ngMetadataName","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","annotationInstance","TypeDecorator","cls","annotationCls","ctor","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","notFoundValue","Injector","StaticInjector","NULL","inject","IDENT","EMPTY$1","CIRCULAR$1","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","setUpBloom","parentLoc","getParentInjectorLocation","parentIndex","getParentInjectorView","parentData","bloomIndex","footer","viewOffset","location","startView","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateNodeInjector","directiveInject","getOrCreateInjectable","injectAttribute","attrNameToInject","bloomHash","bloomHashBitOrFactory","tokenId","startInjectorIndex","injectorView","parentLocation","shouldNotSearchParent","injectorHasToken","searchDirectivesOnInjector","searchMatchesQueuedForCreation","formerInjector","nodeFlags","NodeInjector","_tNode","_hostView","_injectorIndex","setEnvironment","getFactoryOf","typeAny","getInheritedFactory","PublicFeature","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngModule","_this","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noopFactory","RendererStyleFlags2","R3_ELEMENT_REF_FACTORY$1","R3_TEMPLATE_REF_FACTORY$1","R3_CHANGE_DETECTOR_REF_FACTORY$1","R3_VIEW_CONTAINER_REF_FACTORY$1","R3_RENDERER2_FACTORY$1","ElementRef","nativeElement","RenderComponentType","templateUrl","slotCount","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","Set","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","existing","multiRecord_1","hasOnDestroy","input","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","result","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","factoryFn","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","find","reduce","init","some","toArray","reset","flatten","item","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","EventListener","DebugNode","nativeNode","_debugContext","listeners","DebugElement","addChild","references","providerTokens","properties","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","_devMode","_runModeLocked","isDevMode","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","componentResourceResolutionQueue","componentNeedsResolution","styleUrls","unwrapResponse","response","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","Query","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµPublicFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModuleDefs","flatten$1","wrapReference","expandModuleWithProviders","emitInline","compileNgModule","jitExpression","compileInjector","statements","patchComponentDefWithScope","transitiveScopes","from","compilation","dir","transitiveScopesFor","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","piece","isUseClassProvider","USE_VALUE$1","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","R3_COMPILE_COMPONENT","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","wrapDirectivesInClosure","makeBindingParser","preStatements","hasSelectorScope","ngSelectorScope","R3_COMPILE_DIRECTIVE","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","R3_COMPILE_PIPE","compilePipe","compilePipeFromMetadata","R3_COMPILE_NGMODULE_DEFS","R3_PATCH_COMPONENT_DEF_WTIH_SCOPE","noop","R3_COMPILE_COMPONENT__POST_NGCC__","R3_COMPILE_DIRECTIVE__POST_NGCC__","R3_COMPILE_PIPE__POST_NGCC__","R3_COMPILE_COMPONENT$1","R3_COMPILE_DIRECTIVE$1","R3_COMPILE_PIPE$1","USE_VALUE$2","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","k","IterableDiffers","copied","extend","iterable","f","getTypeNameForDebugging","Injectable","preR3InjectableCompile","injectableType","R3_COMPILE_INJECTABLE$1","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","ViewContainerRef","isPromise","isObservable","Version","VERSION","full","major","minor","patch","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","ref","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","bootstrapComponents","NgModuleRef_","_moduleType","_destroyListeners","_destroyed","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ViewAction","QueryList$1","_results","flatten$2","flat","flatItem","last","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","binding","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","ShadowDom","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initialized","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","loadContext","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","CorePlayerHandler","_players","player","play","queuePlayer","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_NGCC__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","Directive","Component","Default","Pipe","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","NgModule","preR3NgModuleCompile","R3_COMPILE_NGMODULE$1","NgModuleFactoryLoader","moduleFactories","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","MissingTranslationStrategy","ViewRef$1","EmbeddedViewRef","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Éµangular_packages_core_core_r","Éµangular_packages_core_core_o","Éµangular_packages_core_core_p","Éµangular_packages_core_core_q","Éµangular_packages_core_core_l","Éµangular_packages_core_core_m","Éµangular_packages_core_core_n","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_k","Éµangular_packages_core_core_s","Éµangular_packages_core_core_u","Éµangular_packages_core_core_t","Éµangular_packages_core_core_x","Éµangular_packages_core_core_v","Éµangular_packages_core_core_w","Éµangular_packages_core_core_be","Éµangular_packages_core_core_b","Éµangular_packages_core_core_c","Éµangular_packages_core_core_a","Éµangular_packages_core_core_bd","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_bf","Éµangular_packages_core_core_y","Éµangular_packages_core_core_z","Éµangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$1","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompileComponent","ÉµcompileDirective","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµaddPlayer","addPlayer","elementContext","animationContext","getRootContext","viewOrComponent","ÉµgetPlayers","getPlayers","ÉµcompileNgModuleFactory__POST_NGCC__","compileNgModuleFactory__POST_NGCC__","ÉµR3_COMPILE_COMPONENT__POST_NGCC__","ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__","ÉµR3_COMPILE_INJECTABLE__POST_NGCC__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ÉµR3_COMPILE_NGMODULE__POST_NGCC__","setScopeOnDeclaredComponents","declaration","ÉµR3_COMPILE_PIPE__POST_NGCC__","ÉµivyEnable__POST_NGCC__","ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__","injectElementRef","ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__","injectTemplateRef","ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__","injectChangeDetectorRef","ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","adjustedIdx","_adjustIndex","newIndex","shift","ÉµR3_RENDERER2_FACTORY__POST_NGCC__","injectRenderer2","getOrCreateRenderer2","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.0.0-rc.1+60.sha-6d3a45c.with-local-changes\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var encapsulation = componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated;\n        var styles = componentDefinition.styles || EMPTY_ARRAY;\n        var animations = componentDefinition.animations || null;\n        var data = componentDefinition.data || {};\n        if (animations) {\n            data.animations = animations;\n        }\n        var def = {\n            type: type,\n            diPublic: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: data,\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: encapsulation,\n            providers: EMPTY_ARRAY,\n            viewProviders: EMPTY_ARRAY,\n            id: \"c\" + _renderCompCount++, styles: styles,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            var hostTNode = currentView[HOST_NODE];\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var elementContainer = getHighestElementContainer(childTNode);\n                var renderParent = getRenderParent(elementContainer, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData)\n                storageIndex = HOST;\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (ngDevMode && !context) {\n            throw new Error('Only elements that exist in an Angular application can be used for player access');\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return stylingContext[0 /* PlayerContext */] || allocPlayerContext(stylingContext);\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] = [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStylingValues.length > 1);\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classes The key/value map of CSS class names that will be used for the update.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classes, styles) {\n        styles = styles || null;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = classes === context[6 /* PreviousMultiClassValue */];\n        var ignoreAllStyleUpdates = styles === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            context[6 /* PreviousMultiClassValue */] = classes;\n            if (typeof classes == 'string') {\n                classNames = classes.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n            }\n        }\n        classes = (classes || EMPTY_OBJ);\n        if (!ignoreAllStyleUpdates) {\n            context[7 /* PreviousMultiStyleValue */] = styles;\n        }\n        var styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n        styles = styles || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                context.push(flag, prop, value);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param classStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     */\n    function renderStyling(context, renderer, styleStore, classStore) {\n        if (isContextDirty(context)) {\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    if (isClassBased_6) {\n                        setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                    }\n                    else {\n                        var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                        setStyle(native, prop, valueToApply, renderer, sanitizer, styleStore);\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store) {\n            store[prop] = value;\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store) {\n        if (store) {\n            store[className] = add;\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setEnvironment(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function _getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews() {\n        setHostBindings();\n        var parentFirstTemplatePass = firstTemplatePass;\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings() {\n        if (tView.expandoInstructions) {\n            bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        if (typeof viewData[bindingRootIndex] === 'number') {\n                            // We've hit an injector. It may or may not exist depending on whether\n                            // there is a public directive on this node.\n                            bindingRootIndex += INJECTOR_SIZE;\n                        }\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            tNode = tView.data[adjustedIndex] = createTNode(type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        previousOrParentTNode = tNode;\n        isParent = true;\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(2 /* View */, index, null, null, null);\n        }\n        isParent = true;\n        return previousOrParentTNode = view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        isParent = true;\n        previousOrParentTNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        isParent = _isParent;\n        previousOrParentTNode = _previousOrParentTNode;\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentTNode = previousOrParentTNode;\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                isParent = true;\n                previousOrParentTNode = null;\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews();\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = firstTemplatePass = false;\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                isParent = _isParent;\n                previousOrParentTNode = _previousOrParentTNode;\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings();\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (elementDepthCount === 0) {\n            attachPatchData(native, viewData);\n        }\n        elementDepthCount++;\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || renderer;\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!bindingsEnabled)\n            return;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(previousOrParentTNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData(localRefExtractor);\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        generateExpandoBlock(tNode, matches);\n        var totalHostVars = 0;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(totalHostVars);\n    }\n    /**\n     * Generates a new block in TView.expandoInstructions for this node.\n     *\n     * Each expando block starts with the element index (turned negative so we can distinguish\n     * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n     */\n    function generateExpandoBlock(tNode, matches) {\n        var directiveCount = matches ? matches.length / 2 : 0;\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        if (directiveCount > 0) {\n            (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, directiveCount);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        addComponentLogic(def);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def, null);\n                    }\n                    else {\n                        matches.push(def, null);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR;\n            var instance = def.factory();\n            return directiveCreate(matches[valueIndex] = viewData.length, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck() {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex, def) {\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        ngDevMode && assertEqual(firstTemplatePass, false, \"Directives should only be instantiated directly after first template pass\");\n        var count = previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (isContentQueryHost(previousOrParentTNode) && currentQueries) {\n            currentQueries = currentQueries.clone();\n        }\n        if (count > 0) {\n            var start = previousOrParentTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                // Component view must be set on node before the factory is created so\n                // ChangeDetectorRefs have a way to store component view on creation.\n                if (def.template) {\n                    addComponentLogic(def);\n                }\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(localRefExtractor) {\n        var localNames = previousOrParentTNode.localNames;\n        var tNode = previousOrParentTNode;\n        if (localNames) {\n            var localIndex = previousOrParentTNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? localRefExtractor(tNode, viewData) : viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(previousOrParentTNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (firstTemplatePass) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n        elementDepthCount--;\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        updateClassProp(getStylingContext(index, viewData), stylingIndex, value ? true : false);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = previousOrParentTNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate =\n                createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            elementStylingApply(tNode.index - HEADER_OFFSET);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyling(getStylingContext(index, viewData), renderer);\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, viewData), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        updateStylingMap(getStylingContext(index, viewData), classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, renderer);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, viewData);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef, native);\n        if (directiveDef.template) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        }\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, previousOrParentTNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(rendererFactory.createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (firstTemplatePass) {\n            queueComponentIndexForCheck();\n            previousOrParentTNode.flags =\n                viewData.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef, native) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        viewData[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentTNode.flags;\n            if (flags === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentTNode.flags =\n                    index << 15 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentTNode.flags++;\n            }\n            tView.data.push(directiveDef);\n            tView.blueprint.push(null);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(index, directiveDef);\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (firstTemplatePass) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(localRefs, localRefExtractor);\n        currentQueries &&\n            (currentQueries = currentQueries.addNode(previousOrParentTNode));\n        queueLifecycleHooks(tNode.flags, tView);\n        isParent = false;\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        firstTemplatePass && (tNode.tViews = []);\n        isParent = false;\n    }\n    function containerInternal(index, tagName, attrs) {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentTNode = loadInternal(index, tView.data);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        isParent = true;\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = viewData[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        var currentView = viewData;\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            isParent = true;\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, currentView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews();\n        leaveView(viewData[PARENT]);\n        previousOrParentTNode = viewHost;\n        isParent = false;\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, viewData);\n        ngDevMode && assertNodeType(tView.data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(viewData)[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= 1 /* DetectChanges */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        checkNoChangesMode = true;\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(viewData[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(viewData[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        return loadInternal(index, contextViewData);\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return viewData[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = viewData.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Root component will always have an element index of 0 and an injector size of 1\n    var ROOT_EXPANDO_INSTRUCTIONS = [0, 1];\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks();\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            tView.expandoInstructions = ROOT_EXPANDO_INSTRUCTIONS.slice();\n            if (def.diPublic)\n                def.diPublic(def);\n            tNode.flags =\n                rootView.length << 15 /* DirectiveStartingIndexShift */ | 4096 /* isComponent */;\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        // Create directive instance with factory() and store at next index in viewData\n        var component = baseDirectiveCreate(rootView.length, componentDef.factory(), componentDef, hostRNode);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (rootView[TVIEW].firstTemplatePass)\n            prefillHostVars(componentDef.hostVars);\n        setHostBindings();\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 15 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$1(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$1(component).clean;\n    }\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function () {\n                            superContentQueries_1();\n                            prevContentQueries_1();\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = getInjectableDef(token);\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        if (tView.firstTemplatePass) {\n            var id = type[NG_ELEMENT_ID];\n            // Set a unique ID on the directive type, so if something tries to inject the directive,\n            // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n            if (id == null) {\n                id = type[NG_ELEMENT_ID] = nextNgElementId++;\n            }\n            // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n            // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n            var bloomBit = id & BLOOM_MASK;\n            // Create a mask that targets the specific bit associated with the directive.\n            // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n            // to bit positions 0 - 31 in a 32 bit integer.\n            var mask = 1 << bloomBit;\n            // Use the raw bloomBit number to determine which bloom filter bucket we should check\n            // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n            var b7 = bloomBit & 0x80;\n            var b6 = bloomBit & 0x40;\n            var b5 = bloomBit & 0x20;\n            var tData = tView.data;\n            if (b7) {\n                b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n            }\n            else {\n                b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                    (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n            }\n        }\n    }\n    function getOrCreateNodeInjector() {\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            setUpBloom(tView.data, tNode); // foundation for node bloom\n            setUpBloom(hostView, null); // foundation for cumulative bloom\n            setUpBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = parentLoc & 32767 /* InjectorIndexMask */;\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var parentData = parentView[TVIEW].data;\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (parentLoc !== -1) {\n            for (var i = 0; i < PARENT_INJECTOR; i++) {\n                var bloomIndex = parentIndex + i;\n                // Creates a cumulative bloom filter that merges the parent's bloom filter\n                // and its own cumulative bloom (which contains tokens for all ancestors)\n                hostView[injectorIndex + i] = parentView[bloomIndex] | parentData[bloomIndex];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function setUpBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // view offset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 15 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = location >> 15 /* ViewOffsetShift */;\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, def) {\n        bloomAdd(injectorIndex, view[TVIEW], def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), _getViewData(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var hostTNode = getPreviousOrParentTNode();\n        return getOrCreateInjectable(hostTNode, _getViewData(), token, flags);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the injectors.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(hostTNode, hostView, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function')\n            return bloomHash();\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic) otherwise fall back to the module injector.\n        if (bloomHash != null) {\n            var startInjectorIndex = getInjectorIndex(hostTNode, hostView);\n            var injectorIndex = startInjectorIndex;\n            var injectorView = hostView;\n            var parentLocation = -1;\n            // If we should skip this injector or if an injector doesn't exist on this node (e.g. all\n            // directives on this node are private), start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */ || injectorIndex === -1) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(hostTNode, hostView) :\n                    injectorView[injectorIndex + PARENT_INJECTOR];\n                if (shouldNotSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                    injectorView = getParentInjectorView(parentLocation, injectorView);\n                }\n            }\n            while (injectorIndex !== -1) {\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match. Outer loop is necessary in case we get a false positive injector.\n                while (injectorIndex !== -1) {\n                    // Check the current injector. If it matches, stop searching for an injector.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView[TVIEW].data)) {\n                        break;\n                    }\n                    parentLocation = injectorView[injectorIndex + PARENT_INJECTOR];\n                    if (shouldNotSearchParent(flags, parentLocation)) {\n                        injectorIndex = -1;\n                        break;\n                    }\n                    // If the ancestor bloom filter value has the bit corresponding to the directive, traverse\n                    // up to find the specific injector. If the ancestor bloom filter does not have the bit, we\n                    // can abort.\n                    if (injectorHasToken(bloomHash, injectorIndex, injectorView)) {\n                        injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        injectorView = getParentInjectorView(parentLocation, injectorView);\n                    }\n                    else {\n                        injectorIndex = -1;\n                        break;\n                    }\n                }\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (injectorIndex === -1) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var instance = void 0;\n                if (instance = searchDirectivesOnInjector(injectorIndex, injectorView, token)) {\n                    return instance;\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                if (injectorIndex === startInjectorIndex && hostView === injectorView &&\n                    (instance = searchMatchesQueuedForCreation(token, injectorView[TVIEW]))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // Traverse up the tree and continue searching.\n                injectorIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                injectorView = getParentInjectorView(parentLocation, injectorView);\n            }\n        }\n        var moduleInjector = hostView[INJECTOR];\n        var formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    function searchMatchesQueuedForCreation(token, hostTView) {\n        var matches = hostTView.currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches);\n                }\n            }\n        }\n        return null;\n    }\n    function searchDirectivesOnInjector(injectorIndex, injectorView, token) {\n        var tNode = injectorView[TVIEW].data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var count = nodeFlags & 4095 /* DirectiveCountMask */;\n        if (count !== 0) {\n            var start = nodeFlags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var defs = injectorView[TVIEW].data;\n            for (var i = start; i < end; i++) {\n                // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                // and matches the given token, return the directive instance.\n                var directiveDef = defs[i];\n                if (directiveDef.type === token && directiveDef.diPublic) {\n                    return injectorView[i];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function injectorHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldNotSearchParent(flags, parentLocation) {\n        return flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ && (parentLocation >> 15 /* ViewOffsetShift */) > 0);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setEnvironment(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), _getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        var hostContainer = hostView[hostTNode.index];\n        ngDevMode && assertNodeType(hostTNode, 0 /* Container */);\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, _getViewData());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentIndex = parentLocation & 32767 /* InjectorIndexMask */;\n                        var parentTNode = parentView[TVIEW].data[parentIndex];\n                        return parentLocation === -1 ? new NullInjector() :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var comment = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, comment, true);\n            appendChild(comment, hostTNode, hostView);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), _getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 15 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(_getViewData());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3_ELEMENT_REF_FACTORY = injectElementRef;\n    var R3_TEMPLATE_REF_FACTORY = injectTemplateRef;\n    var R3_CHANGE_DETECTOR_REF_FACTORY = injectChangeDetectorRef;\n    var R3_VIEW_CONTAINER_REF_FACTORY = injectViewContainerRef;\n    var R3_RENDERER2_FACTORY = injectRenderer2;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noopFactory() {\n        var tokens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tokens[_i] = arguments[_i];\n        }\n    }\n    var R3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY;\n    var R3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY;\n    var R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY;\n    var R3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY;\n    var R3_ELEMENT_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_TEMPLATE_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_RENDERER2_FACTORY__PRE_NGCC__ = noopFactory;\n    var R3_ELEMENT_REF_FACTORY$1 = R3_ELEMENT_REF_FACTORY__PRE_NGCC__;\n    var R3_TEMPLATE_REF_FACTORY$1 = R3_TEMPLATE_REF_FACTORY__PRE_NGCC__;\n    var R3_CHANGE_DETECTOR_REF_FACTORY$1 = R3_CHANGE_DETECTOR_REF_FACTORY__PRE_NGCC__;\n    var R3_VIEW_CONTAINER_REF_FACTORY$1 = R3_VIEW_CONTAINER_REF_FACTORY__PRE_NGCC__;\n    var R3_RENDERER2_FACTORY$1 = R3_RENDERER2_FACTORY__PRE_NGCC__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return R3_ELEMENT_REF_FACTORY$1(ElementRef); };\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return R3_RENDERER2_FACTORY$1(); };\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            adjustBlueprintForNewNode(rootView);\n                            var tNode = createNodeAtIndex(++index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = _getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = _getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(_getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = _getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = _getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = _getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = _getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return makeRecord(function () { return new token(); });\n        }\n        return makeRecord(injectableDef.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return R3_TEMPLATE_REF_FACTORY$1(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 15 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type && def.diPublic) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = _getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµPublicFeature': PublicFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [], wrapDirectivesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var Éµ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$1 });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n    var R3_COMPILE_NGMODULE_DEFS = compileNgModuleDefs;\n    var R3_PATCH_COMPONENT_DEF_WTIH_SCOPE = patchComponentDefWithScope;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() { }\n    var R3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT;\n    var R3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE;\n    var R3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE;\n    var R3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE;\n    var R3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE;\n    var ivyEnable__POST_NGCC__ = ivyEnabled;\n    var R3_COMPILE_COMPONENT__PRE_NGCC__ = noop;\n    var R3_COMPILE_DIRECTIVE__PRE_NGCC__ = noop;\n    var R3_COMPILE_INJECTABLE__PRE_NGCC__ = preR3InjectableCompile;\n    var R3_COMPILE_NGMODULE__PRE_NGCC__ = preR3NgModuleCompile;\n    var R3_COMPILE_PIPE__PRE_NGCC__ = noop;\n    var ivyEnable__PRE_NGCC__ = false;\n    var ivyEnabled$1 = ivyEnable__PRE_NGCC__;\n    var R3_COMPILE_COMPONENT$1 = R3_COMPILE_COMPONENT__PRE_NGCC__;\n    var R3_COMPILE_DIRECTIVE$1 = R3_COMPILE_DIRECTIVE__PRE_NGCC__;\n    var R3_COMPILE_INJECTABLE$1 = R3_COMPILE_INJECTABLE__PRE_NGCC__;\n    var R3_COMPILE_NGMODULE$1 = R3_COMPILE_NGMODULE__PRE_NGCC__;\n    var R3_COMPILE_PIPE$1 = R3_COMPILE_PIPE__PRE_NGCC__;\n    ////////////////////////////////////////////////////////////\n    // Glue code which should be removed after Ivy is default //\n    ////////////////////////////////////////////////////////////\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var Éµ0$2 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return R3_COMPILE_INJECTABLE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return R3_CHANGE_DETECTOR_REF_FACTORY$1(); };\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return R3_VIEW_CONTAINER_REF_FACTORY$1(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('7.0.0-rc.1+60.sha-6d3a45c.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled$1 ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lViewData);\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 15 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function addPlayer(ref, player) {\n        var elementContext = getContext(ref);\n        var animationContext = getOrCreatePlayerContext(elementContext.native, elementContext);\n        animationContext.push(player);\n        player.addEventListener(200 /* Destroyed */, function () {\n            var index = animationContext.indexOf(player);\n            if (index >= 0) {\n                animationContext.splice(index, 1);\n            }\n            player.destroy();\n        });\n        var rootContext = getRootContext(elementContext.lViewData);\n        var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n        playerHandler.queuePlayer(player, ref);\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        // change detection may or may not happen therefore\n        // the core code needs to be kicked off to flush the animations\n        rootContext.flags |= 2 /* FlushPlayers */;\n        if (nothingScheduled) {\n            scheduleTick(rootContext);\n        }\n    }\n    function getPlayers(ref) {\n        return getOrCreatePlayerContext(ref);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_NGCC__;\n    function compileNgModuleFactory__PRE_NGCC__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_NGCC__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ÉµdefineNgModule = defineNgModule;\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return R3_COMPILE_DIRECTIVE$1(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return R3_COMPILE_COMPONENT$1(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return R3_COMPILE_PIPE$1(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return R3_COMPILE_NGMODULE$1(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_q = _localeFactory;\n    exports.Éµangular_packages_core_core_l = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_i = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_j = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_k = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_s = wtfEnabled;\n    exports.Éµangular_packages_core_core_u = createScope;\n    exports.Éµangular_packages_core_core_t = detectWTF;\n    exports.Éµangular_packages_core_core_x = endTimeRange;\n    exports.Éµangular_packages_core_core_v = leave;\n    exports.Éµangular_packages_core_core_w = startTimeRange;\n    exports.Éµangular_packages_core_core_be = NG_INJECTABLE_DEF;\n    exports.Éµangular_packages_core_core_b = _getViewData;\n    exports.Éµangular_packages_core_core_c = bindingUpdated;\n    exports.Éµangular_packages_core_core_a = getPreviousOrParentTNode;\n    exports.Éµangular_packages_core_core_bd = getOrCreatePlayerContext;\n    exports.Éµangular_packages_core_core_bc = loadInternal;\n    exports.Éµangular_packages_core_core_d = createElementRef;\n    exports.Éµangular_packages_core_core_e = createTemplateRef;\n    exports.Éµangular_packages_core_core_f = createViewRef;\n    exports.Éµangular_packages_core_core_g = makeParamDecorator;\n    exports.Éµangular_packages_core_core_h = makePropDecorator;\n    exports.Éµangular_packages_core_core_bf = getClosureSafeProperty;\n    exports.Éµangular_packages_core_core_y = _def;\n    exports.Éµangular_packages_core_core_z = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ÉµdefineNgModule = ÉµdefineNgModule;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileNgModuleDefs = R3_COMPILE_NGMODULE_DEFS;\n    exports.ÉµpatchComponentDefWithScope = R3_PATCH_COMPONENT_DEF_WTIH_SCOPE;\n    exports.ÉµcompileComponent = R3_COMPILE_COMPONENT;\n    exports.ÉµcompileDirective = R3_COMPILE_DIRECTIVE;\n    exports.ÉµcompilePipe = R3_COMPILE_PIPE;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_NGCC__ = compileNgModuleFactory__POST_NGCC__;\n    exports.ÉµR3_COMPILE_COMPONENT__POST_NGCC__ = R3_COMPILE_COMPONENT__POST_NGCC__;\n    exports.ÉµR3_COMPILE_DIRECTIVE__POST_NGCC__ = R3_COMPILE_DIRECTIVE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_INJECTABLE__POST_NGCC__ = R3_COMPILE_INJECTABLE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_NGMODULE__POST_NGCC__ = R3_COMPILE_NGMODULE__POST_NGCC__;\n    exports.ÉµR3_COMPILE_PIPE__POST_NGCC__ = R3_COMPILE_PIPE__POST_NGCC__;\n    exports.ÉµivyEnable__POST_NGCC__ = ivyEnable__POST_NGCC__;\n    exports.ÉµR3_ELEMENT_REF_FACTORY__POST_NGCC__ = R3_ELEMENT_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_TEMPLATE_REF_FACTORY__POST_NGCC__ = R3_TEMPLATE_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__ = R3_CHANGE_DETECTOR_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__ = R3_VIEW_CONTAINER_REF_FACTORY__POST_NGCC__;\n    exports.ÉµR3_RENDERER2_FACTORY__POST_NGCC__ = R3_RENDERER2_FACTORY__POST_NGCC__;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled$1;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}